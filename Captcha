
import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;

@WebServlet("/captcha")
public class CaptchaServlet extends HttpServlet {

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int width = 150;
        int height = 50;

        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = image.createGraphics();

        // 生成隨機的驗證碼
        String captchaText = generateCaptchaText();

        // 將驗證碼存儲在 Session 中
        HttpSession session = request.getSession();
        session.setAttribute("captcha", captchaText);

        // 設置圖像背景
        g2d.setColor(Color.WHITE);
        g2d.fillRect(0, 0, width, height);

        // 繪製驗證碼文字
        g2d.setColor(Color.BLACK);
        g2d.setFont(new Font("Arial", Font.BOLD, 30));
        g2d.drawString(captchaText, 10, 35);

        // 繪製干擾線
        g2d.setColor(Color.GRAY);
        Random random = new Random();
        for (int i = 0; i < 5; i++) {
            int x1 = random.nextInt(width);
            int y1 = random.nextInt(height);
            int x2 = random.nextInt(width);
            int y2 = random.nextInt(height);
            g2d.drawLine(x1, y1, x2, y2);
        }

        g2d.dispose();

        // 將圖像寫入 response 中
        response.setContentType("image/png");
        ImageIO.write(image, "png", response.getOutputStream());
    }

    private String generateCaptchaText() {
        // 在這裡實現你的隨機驗證碼生成邏輯
        // 這裡僅提供一個簡單的範例
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        int length = 6;
        StringBuilder captchaText = new StringBuilder();
        Random random = new Random();

        for (int i = 0; i < length; i++) {
            int index = random.nextInt(characters.length());
            captchaText.append(characters.charAt(index));
        }

        return captchaText.toString();
    }
}


@WebServlet("/verify")
public class VerificationServlet extends HttpServlet {

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // 獲取前端輸入的驗證碼
        String userInput = request.getParameter("captcha");

        // 從 Session 中取回之前存儲的驗證碼
        HttpSession session = request.getSession();
        String storedCaptcha = (String) session.getAttribute("captcha");

        // 比對使用者輸入的驗證碼與存儲的驗證碼
        boolean isValid = userInput != null && userInput.equalsIgnoreCase(storedCaptcha);

        if (isValid) {
            // 驗證碼正確，執行相應的操作
            // ...
            // 清除 Session 中的驗證碼
            session.removeAttribute("captcha");
        } else {
            // 驗證碼錯誤，處理錯誤<!DOCTYPE html>
<html>
<head>
    <title>更新圖形驗證碼示例</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function updateCaptcha() {
            $.ajax({
                url: '/captcha', // 請求後端生成新的圖形驗證碼
                method: 'GET',
                success: function(data) {
                    $('#captchaImage').attr('src', 'data:image/png;base64,' + data); // 將新的圖形驗證碼設置到圖片元素中
                },
                error: function() {
                    alert('無法更新圖形驗證碼。');
                }
            });
        }
    </script>
</head>
<body>
    <h1>圖形驗證碼示例</h1>
    <img id="captchaImage" src="/captcha" alt="圖形驗證碼">
    <button onclick="updateCaptcha()">更新圖形驗證碼</button>
</body>
</html>





