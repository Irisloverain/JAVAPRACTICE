import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/login")
public class LoginServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private static final String DB_URL = "jdbc:sqlserver://localhost:1433;databaseName=your_database_name";
    private static final String DB_USERNAME = "your_username";
    private static final String DB_PASSWORD = "your_password";

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String username = request.getParameter("username");
        String password = request.getParameter("password");

        boolean isAuthenticated = authenticateUser(username, password);

        if (isAuthenticated) {
            // 登入成功
            response.sendRedirect("welcome.jsp"); // 可以改為你登入成功後要導向的頁面
        } else {
            // 登入失敗
            response.sendRedirect("login.jsp?error=true"); // 可以改為你登入失敗後要導向的頁面
        }
    }

    private boolean authenticateUser(String username, String password) {
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;
        boolean isAuthenticated = false;

        try {
            conn = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD);
            String query = "SELECT * FROM users WHERE username = ? AND password = ?";
            stmt = conn.prepareStatement(query);
            stmt.setString(1, username);
            stmt.setString(2, password);
            rs = stmt.executeQuery();
            if (rs.next()) {
                // 表示找到了匹配的帳號密碼
                isAuthenticated = true;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        return isAuthenticated;
    }
}





import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/MyServlet")
public class MyServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();

        // 資料庫連線設定
        String url = "jdbc:sqlserver://localhost:1433;databaseName=YourDatabaseName";
        String username = "YourUsername";
        String password = "YourPassword";

        try {
            // 載入 JDBC 驅動程式
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // 建立資料庫連線
            Connection conn = DriverManager.getConnection(url, username, password);

            // 建立 SQL 查詢
            String sql = "SELECT * FROM YourTableName";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // 將資料轉換成 JSON 格式
            String jsonData = "{ \"data\": [";
            while (rs.next()) {
                jsonData += "[";
                jsonData += "\"" + rs.getString("column1") + "\",";
                jsonData += "\"" + rs.getString("column2") + "\",";
                // 依此類推，加入其他欄位的資料
                jsonData += "],";
            }
            jsonData = jsonData.substring(0, jsonData.length() - 1); // 移除最後一個逗號
            jsonData += "]}";

            // 關閉資源
            rs.close();
            stmt.close();
            conn.close();

            // 將資料傳送回前端
            out.print(jsonData);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            out.close();
        }
    }
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Data Table Example</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/dt-1.11.3/datatables.min.css"/>
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs5/dt-1.11.3/datatables.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            $('#dataTable').DataTable({
                "ajax": {
                    "url": "MyServlet",
                    "dataSrc": "data"
                },
                "columns": [
                    { "data": "0" },
                    { "data": "1" },
                    // 依此類推，加入其他欄位的設定
                    // 依此類推，加入其他欄位的設定
                ]
            });
        });
    </script>
</head>
<body>
    <table id="dataTable" class="display" style="width:100%">
        <thead>
            <tr>
                <th>Column 1</th>
                <th>Column 2</th>
                <!-- 依此類推，加入其他欄位的標題 -->
            </tr>
        </thead>
    </table>
</body>
</html>


// 將資料轉換成 JSON 格式
String jsonData = "{ \"data\": [";
while (rs.next()) {
    jsonData += "[";
    jsonData += "\"" + rs.getString("column1") + "\",";
    jsonData += "\"" + rs.getString("column2") + "\",";
    // 依此類推，加入其他欄位的資料
    jsonData += "],";
}
if (jsonData.endsWith(",")) {
    jsonData = jsonData.substring(0, jsonData.length() - 1); // 移除最後一個逗號
}
jsonData += "]}";



import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONArray;
import org.json.JSONObject;

@WebServlet("/MyServlet")
public class MyServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("application/json;charset=UTF-8");
        PrintWriter out = response.getWriter();

        // 資料庫連線設定
        String url = "jdbc:sqlserver://localhost:1433;databaseName=YourDatabaseName";
        String username = "YourUsername";
        String password = "YourPassword";

        try {
            // 載入 JDBC 驅動程式
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // 建立資料庫連線
            Connection conn = DriverManager.getConnection(url, username, password);

            // 建立 SQL 查詢
            String sql = "SELECT * FROM YourTableName";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // 將資料轉換成 JSON 格式
            JSONArray jsonArray = new JSONArray();
            while (rs.next()) {
                JSONObject jsonRow = new JSONObject();
                jsonRow.put("column1", rs.getString("column1"));
                jsonRow.put("column2", rs.getString("column2"));
                // 依此類推，加入其他欄位的資料
                jsonArray.put(jsonRow);
            }
            JSONObject jsonData = new JSONObject();
            jsonData.put("data", jsonArray);

            // 關閉資源
            rs.close();
            stmt.close();
            conn.close();

            // 將資料傳送回前端
            out.print(jsonData.toString());
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            out.close();
        }
    }
}



//轉換格式字串版本
// 將資料轉換成 JSON 格式
    		String jsonData = "{ \"data\": [";
    		while (rs.next()) {
    		    jsonData += "{";
    		    jsonData += "\"id\":\"" + rs.getString("id") + "\",";
    		    jsonData += "\"name\":\"" + rs.getString("name") + "\",";
    		    jsonData += "\"phone\":\"" + rs.getString("phone") + "\",";
    		    jsonData += "\"address\":\"" + rs.getString("address") + "\",";
    		    jsonData += "\"remark\":\"" + rs.getString("remark") + "\",";
    		    // 依此類推，加入其他欄位的資料
    		    jsonData += "},";
    		}
    		if (jsonData.endsWith(",")) {
    		    jsonData = jsonData.substring(0, jsonData.length() - 1); // 移除最後一個逗號
    		}
    		jsonData += "]}";
            
//轉換格式JSON版本           


